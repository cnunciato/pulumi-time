// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * This resource can be imported using the base UTC RFC3339 timestamp and offset years, months, days, hours, minutes, and seconds, separated by commas (`,`), e.g. console
 *
 * ```sh
 *  $ pulumi import time:index/timeOffset:TimeOffset example 2020-02-12T06:36:13Z,0,0,7,0,0,0
 * ```
 *
 *  The `triggers` argument cannot be imported.
 */
export class TimeOffset extends pulumi.CustomResource {
    /**
     * Get an existing TimeOffset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TimeOffsetState, opts?: pulumi.CustomResourceOptions): TimeOffset {
        return new TimeOffset(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'time:index/timeOffset:TimeOffset';

    /**
     * Returns true if the given object is an instance of TimeOffset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TimeOffset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TimeOffset.__pulumiType;
    }

    /**
     * Configure the base timestamp with an UTC [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`). Defaults to the current time.
     */
    public readonly baseRfc3339!: pulumi.Output<string>;
    /**
     * Number day of offset timestamp.
     */
    public /*out*/ readonly day!: pulumi.Output<number>;
    /**
     * Number hour of offset timestamp.
     */
    public /*out*/ readonly hour!: pulumi.Output<number>;
    /**
     * Number minute of offset timestamp.
     */
    public /*out*/ readonly minute!: pulumi.Output<number>;
    /**
     * Number month of offset timestamp.
     */
    public /*out*/ readonly month!: pulumi.Output<number>;
    /**
     * Number of days to offset the base timestamp. Conflicts with other `offset_` arguments.
     */
    public readonly offsetDays!: pulumi.Output<number | undefined>;
    /**
     * Number of hours to offset the base timestamp. Conflicts with other `offset_` arguments.
     */
    public readonly offsetHours!: pulumi.Output<number | undefined>;
    /**
     * Number of minutes to offset the base timestamp. Conflicts with other `offset_` arguments.
     */
    public readonly offsetMinutes!: pulumi.Output<number | undefined>;
    /**
     * Number of months to offset the base timestamp. Conflicts with other `offset_` arguments.
     */
    public readonly offsetMonths!: pulumi.Output<number | undefined>;
    /**
     * Number of seconds to offset the base timestamp. Conflicts with other `offset_` arguments.
     */
    public readonly offsetSeconds!: pulumi.Output<number | undefined>;
    /**
     * Number of years to offset the base timestamp. Conflicts with other `offset_` arguments.
     */
    public readonly offsetYears!: pulumi.Output<number | undefined>;
    /**
     * UTC RFC3339 format of the offset timestamp, e.g. `2020-02-12T06:36:13Z`.
     */
    public /*out*/ readonly rfc3339!: pulumi.Output<string>;
    /**
     * Number second of offset timestamp.
     */
    public /*out*/ readonly second!: pulumi.Output<number>;
    /**
     * Arbitrary map of values that, when changed, will trigger a new base timestamp value to be saved. See the main provider documentation for more information.
     */
    public readonly triggers!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Number of seconds since epoch time, e.g. `1581489373`.
     */
    public /*out*/ readonly unix!: pulumi.Output<number>;
    /**
     * Number year of offset timestamp.
     */
    public /*out*/ readonly year!: pulumi.Output<number>;

    /**
     * Create a TimeOffset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TimeOffsetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TimeOffsetArgs | TimeOffsetState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TimeOffsetState | undefined;
            inputs["baseRfc3339"] = state ? state.baseRfc3339 : undefined;
            inputs["day"] = state ? state.day : undefined;
            inputs["hour"] = state ? state.hour : undefined;
            inputs["minute"] = state ? state.minute : undefined;
            inputs["month"] = state ? state.month : undefined;
            inputs["offsetDays"] = state ? state.offsetDays : undefined;
            inputs["offsetHours"] = state ? state.offsetHours : undefined;
            inputs["offsetMinutes"] = state ? state.offsetMinutes : undefined;
            inputs["offsetMonths"] = state ? state.offsetMonths : undefined;
            inputs["offsetSeconds"] = state ? state.offsetSeconds : undefined;
            inputs["offsetYears"] = state ? state.offsetYears : undefined;
            inputs["rfc3339"] = state ? state.rfc3339 : undefined;
            inputs["second"] = state ? state.second : undefined;
            inputs["triggers"] = state ? state.triggers : undefined;
            inputs["unix"] = state ? state.unix : undefined;
            inputs["year"] = state ? state.year : undefined;
        } else {
            const args = argsOrState as TimeOffsetArgs | undefined;
            inputs["baseRfc3339"] = args ? args.baseRfc3339 : undefined;
            inputs["offsetDays"] = args ? args.offsetDays : undefined;
            inputs["offsetHours"] = args ? args.offsetHours : undefined;
            inputs["offsetMinutes"] = args ? args.offsetMinutes : undefined;
            inputs["offsetMonths"] = args ? args.offsetMonths : undefined;
            inputs["offsetSeconds"] = args ? args.offsetSeconds : undefined;
            inputs["offsetYears"] = args ? args.offsetYears : undefined;
            inputs["triggers"] = args ? args.triggers : undefined;
            inputs["day"] = undefined /*out*/;
            inputs["hour"] = undefined /*out*/;
            inputs["minute"] = undefined /*out*/;
            inputs["month"] = undefined /*out*/;
            inputs["rfc3339"] = undefined /*out*/;
            inputs["second"] = undefined /*out*/;
            inputs["unix"] = undefined /*out*/;
            inputs["year"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(TimeOffset.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TimeOffset resources.
 */
export interface TimeOffsetState {
    /**
     * Configure the base timestamp with an UTC [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`). Defaults to the current time.
     */
    baseRfc3339?: pulumi.Input<string>;
    /**
     * Number day of offset timestamp.
     */
    day?: pulumi.Input<number>;
    /**
     * Number hour of offset timestamp.
     */
    hour?: pulumi.Input<number>;
    /**
     * Number minute of offset timestamp.
     */
    minute?: pulumi.Input<number>;
    /**
     * Number month of offset timestamp.
     */
    month?: pulumi.Input<number>;
    /**
     * Number of days to offset the base timestamp. Conflicts with other `offset_` arguments.
     */
    offsetDays?: pulumi.Input<number>;
    /**
     * Number of hours to offset the base timestamp. Conflicts with other `offset_` arguments.
     */
    offsetHours?: pulumi.Input<number>;
    /**
     * Number of minutes to offset the base timestamp. Conflicts with other `offset_` arguments.
     */
    offsetMinutes?: pulumi.Input<number>;
    /**
     * Number of months to offset the base timestamp. Conflicts with other `offset_` arguments.
     */
    offsetMonths?: pulumi.Input<number>;
    /**
     * Number of seconds to offset the base timestamp. Conflicts with other `offset_` arguments.
     */
    offsetSeconds?: pulumi.Input<number>;
    /**
     * Number of years to offset the base timestamp. Conflicts with other `offset_` arguments.
     */
    offsetYears?: pulumi.Input<number>;
    /**
     * UTC RFC3339 format of the offset timestamp, e.g. `2020-02-12T06:36:13Z`.
     */
    rfc3339?: pulumi.Input<string>;
    /**
     * Number second of offset timestamp.
     */
    second?: pulumi.Input<number>;
    /**
     * Arbitrary map of values that, when changed, will trigger a new base timestamp value to be saved. See the main provider documentation for more information.
     */
    triggers?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Number of seconds since epoch time, e.g. `1581489373`.
     */
    unix?: pulumi.Input<number>;
    /**
     * Number year of offset timestamp.
     */
    year?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a TimeOffset resource.
 */
export interface TimeOffsetArgs {
    /**
     * Configure the base timestamp with an UTC [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`). Defaults to the current time.
     */
    baseRfc3339?: pulumi.Input<string>;
    /**
     * Number of days to offset the base timestamp. Conflicts with other `offset_` arguments.
     */
    offsetDays?: pulumi.Input<number>;
    /**
     * Number of hours to offset the base timestamp. Conflicts with other `offset_` arguments.
     */
    offsetHours?: pulumi.Input<number>;
    /**
     * Number of minutes to offset the base timestamp. Conflicts with other `offset_` arguments.
     */
    offsetMinutes?: pulumi.Input<number>;
    /**
     * Number of months to offset the base timestamp. Conflicts with other `offset_` arguments.
     */
    offsetMonths?: pulumi.Input<number>;
    /**
     * Number of seconds to offset the base timestamp. Conflicts with other `offset_` arguments.
     */
    offsetSeconds?: pulumi.Input<number>;
    /**
     * Number of years to offset the base timestamp. Conflicts with other `offset_` arguments.
     */
    offsetYears?: pulumi.Input<number>;
    /**
     * Arbitrary map of values that, when changed, will trigger a new base timestamp value to be saved. See the main provider documentation for more information.
     */
    triggers?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
